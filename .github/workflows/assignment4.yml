name: assignment4

on: workflow_dispatch

jobs:
  build:
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4
      
      - name: Start logging
        run: |
          echo "$(date -Iminutes)" > log.txt
          echo "Idan Lipschitz, Shahar Shvili" >> log.txt
      
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven
      
      - name: Build stocks service with Maven
        working-directory: ./stocks
        run: mvn clean package -DskipTests
      
      - name: Build capital gains service with Maven
        working-directory: ./capitalgains
        run: mvn clean package -DskipTests
      
      - name: Build Docker images
        id: build_images
        run: |
          if docker build -t ci-cd-stocks1 ./stocks && docker build -t ci-cd-capital-gains ./capitalgains; then
            echo "image successfully built" >> log.txt
            echo "build_success=true" >> $GITHUB_OUTPUT
          else
            echo "image not able to be built" >> log.txt
            echo "build_success=false" >> $GITHUB_OUTPUT
            exit 1
          fi
      
      - name: Save Docker images
        if: steps.build_images.outputs.build_success == 'true'
        run: |
          docker save ci-cd-stocks1 > stocks-service.tar
          docker save ci-cd-capital-gains > capital-gains-service.tar
      
      - name: Upload Docker images as artifacts
        if: steps.build_images.outputs.build_success == 'true'
        uses: actions/upload-artifact@v4
        with:
          name: docker-images
          path: |
            stocks-service.tar
            capital-gains-service.tar
      
      - name: Upload log file
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: logs
          path: log.txt
          overwrite: true

  test:
    needs: build
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4
      
      - name: Download log
        uses: actions/download-artifact@v4
        with:
          name: logs
          
      - name: Download Docker images
        uses: actions/download-artifact@v4
        with:
          name: docker-images
      
      - name: Load Docker images
        run: |
          docker load < stocks-service.tar
          docker load < capital-gains-service.tar
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.9'
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pytest requests pymongo
      
      - name: Start services
        id: start_services
        run: |
          if docker compose up -d --no-build; then
            echo "Container up and running" >> log.txt
            echo "Waiting for services to be ready..."
            sleep 30
            echo "Docker containers status:"
            docker ps -a
            echo "Docker logs for stocks service:"
            docker logs stocks1
            echo "Docker logs for capital gains service:"
            docker logs capital-gains
            echo "Docker logs for MongoDB:"
            docker logs mongo
            exit 0
          else
            echo "Container failed to run" >> log.txt
            exit 1
          fi
      
      - name: Run tests
        id: run_tests
        run: |
          echo "Testing connection to services..."
          curl -v http://localhost:5001/stocks || true
          echo "\nRunning tests..."
          pytest -v tests/assn4_tests.py | tee assn4_test_results.txt
          if [ ${PIPESTATUS[0]} -eq 0 ]; then
            echo "tests succeeded" >> log.txt
          else
            echo "tests failed" >> log.txt
            echo "\nTest failures:" >> log.txt
            cat assn4_test_results.txt >> log.txt
          fi
        continue-on-error: true
      
      - name: Upload test results
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: assn4_test_results.txt
      
      - name: Upload updated log file
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: logs
          path: log.txt
          overwrite: true
      
      - name: Stop services
        if: always()
        run: docker compose down

  query:
    needs: test
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4
      
      - name: Download log
        uses: actions/download-artifact@v4
        with:
          name: logs
          
      - name: Download Docker images
        uses: actions/download-artifact@v4
        with:
          name: docker-images
      
      - name: Load Docker images
        run: |
          docker load < stocks-service.tar
          docker load < capital-gains-service.tar
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.9'
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install requests pymongo
      
      - name: Start services
        run: |
          docker compose up -d --no-build
          sleep 30
      
      - name: Run queries
        run: python tests/query_executor.py
      
      - name: Upload response file
        uses: actions/upload-artifact@v4
        with:
          name: query-results
          path: response.txt
      
      - name: Upload final log file
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: logs
          path: log.txt
          overwrite: true
      
      - name: Stop services
        if: always()
        run: docker compose down
